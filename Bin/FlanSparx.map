SUMMARY:
	ROM0: 4570 bytes used / 11814 free
	ROMX: 10749 bytes used / 5635 free in 1 bank
	WRAM0: 855 bytes used / 3241 free
	WRAMX: 4096 bytes used / 0 free in 1 bank
	HRAM: 29 bytes used / 98 free

ROM0 bank #0:
	SECTION: $0000-$0000 ($0001 byte) ["WaitHBlank but reg B is free"]
	         $0000 = RunSubroutine
	SECTION: $0001-$0033 ($0033 bytes) ["Init"]
	         $0001 = Start
	         $0020 = Start.halt
	EMPTY: $0034-$0037 ($0004 bytes)
	SECTION: $0038-$003a ($0003 bytes) ["Erorr handler"]
	         $0038 = Error2
	EMPTY: $003b-$003f ($0005 bytes)
	SECTION: $0040-$0045 ($0006 bytes) ["Vblank Vector"]
	         $0040 = Vblank
	EMPTY: $0046-$0047 ($0002 bytes)
	SECTION: $0048-$0050 ($0009 bytes) ["LYC Interrupt"]
	EMPTY: $0051-$005f ($000f bytes)
	SECTION: $0060-$00b5 ($0056 bytes) ["Sprite orders"]
	         $0060 = SprCrawdad_0
	         $0064 = SprCrawdad_45
	         $0068 = SprCrawdad_90
	         $006c = SprCrawdad_135
	         $0070 = SprCrawdad_180
	         $0074 = SprCrawdad_225
	         $0078 = SprCrawdad_270
	         $007c = SprCrawdad_315
	         $0080 = SprPlayer_0
	         $0084 = SprPlayer_45
	         $0088 = SprPlayer_90
	         $008c = SprPlayer_135
	         $0090 = SprPlayer_180
	         $0094 = SprPlayer_225
	         $0098 = SprPlayer_270
	         $009c = SprPlayer_315
	         $00a0 = SprBlueGem
	         $00a4 = SprBullet
	         $00a6 = SprGreenGem
	         $00aa = SprPurpleGem
	         $00ae = SprRedGem
	         $00b2 = SprYellowGem
	EMPTY: $00b6-$00bf ($000a bytes)
	SECTION: $00c0-$00ff ($0040 bytes) ["Tileset Solidness"]
	         $00c0 = tileset_solidness
	SECTION: $0100-$014f ($0050 bytes) ["Jumpstart Code"]
	         $0100 = Jumpstart
	SECTION: $0150-$01d9 ($008a bytes) ["Common Gem Code"]
	         $0150 = Object_Start_GemCommon
	         $0170 = Object_Start_GemCommon.loop
	         $0175 = Object_Update_GemCommon
	         $018a = Object_Update_GemCommon.unloadGem
	         $0199 = Obj_PlyColl_GemCommon
	         $01d9 = Obj_PlyColl_GemCommon.noCollision
	SECTION: $01da-$01fa ($0021 bytes) ["Blue Gem"]
	         $01da = Object_Start_BlueGem
	         $01dd = Object_Update_BlueGem
	         $01e0 = Object_Draw_BlueGem
	         $01f6 = Object_PlyColl_BlueGem
	EMPTY: $01fb-$01ff ($0005 bytes)
	SECTION: $0200-$02ff ($0100 bytes) ["LUTs"]
	         $0200 = Mul4LUT
	SECTION: $0300-$030f ($0010 bytes) ["Start Routine Pointers"]
	         $0300 = Object_StartRoutinePointers
	SECTION: $0310-$03ff ($00f0 bytes) ["Object Manager"]
	         $0310 = Object_SpawnObject
	         $0313 = Object_SpawnObject.findSlotloop
	         $031c = Object_SpawnObject.yesDoThisOne
	         $0330 = Object_Update
	         $0333 = Object_Update.objectUpdateLoop
	         $0344 = Object_Update.continue
	         $034a = Object_CheckOnScreen
	         $036c = Object_CheckOnScreen.otherwise
	         $038b = Object_CheckOnScreen.onScreen
	         $0392 = Object_CheckOnScreen.offScreen
	         $0399 = Object_DestroyCurrent
	         $03a1 = Object_CleanTypeArray
	         $03a4 = Object_CleanTypeArray.loop
	         $03ad = Object_CleanTypeArray.writeZero
	         $03af = Object_CleanTypeArray.notWriteZero
	         $03b4 = Object_PlyColl_None
	         $03b4 = Object_Update_None
	         $03b4 = Object_Start_None
	         $03b4 = Object_Draw_None
	         $03b6 = PrepareSpriteDraw
	SECTION: $0400-$040f ($0010 bytes) ["Update Routine Pointers"]
	         $0400 = Object_UpdateRoutinePointers
	SECTION: $0410-$04f5 ($00e6 bytes) ["Title Screen Loop"]
	         $0410 = StateStart_GameLoop
	         $0434 = StateStart_GameLoop.noGBC
	         $0468 = StateStart_GameLoop.noGBC2
	         $0479 = StateStart_GameLoop._after_sprites
	         $0490 = StateStart_GameLoop.clear_loop
	         $04c6 = StateStart_GameLoop.loop
	         $04db = StateUpdate_GameLoop
	         $04ec = StateUpdate_GameLoop.checkLoop
	EMPTY: $04f6-$04ff ($000a bytes)
	SECTION: $0500-$050f ($0010 bytes) ["Player Collision Routine Pointers"]
	         $0500 = Object_PlyCollRoutinePointers
	SECTION: $0510-$05e7 ($00d8 bytes) ["User Interface"]
	         $0510 = UpdateHUD
	         $0537 = UpdateHUD.tile1
	         $0541 = UpdateHUD.notEmpty1
	         $054c = UpdateHUD.notHalf1
	         $054f = UpdateHUD.tile2
	         $0559 = UpdateHUD.notEmpty2
	         $0563 = UpdateHUD.notHalf2
	         $0566 = UpdateHUD.tile3
	         $056d = UpdateHUD.notEmpty3
	         $0574 = UpdateHUD.notHalf3
	         $0578 = ClearWindowLayer
	         $057d = ClearWindowLayer.loop1
	         $0590 = ClearWindowLayer.loop2
	         $0599 = InitWindowLayer
	         $05a2 = InitWindowLayer.loopHor1
	         $05b2 = InitWindowLayer.loopTextRow1
	         $05c7 = InitWindowLayer.loopTextRow2
	         $05d7 = InitWindowLayer.loopHor2
	SECTION: $05e8-$05fc ($0015 bytes) ["OAM DMA routine"]
	         $05e8 = CopyDMARoutine
	         $05ee = CopyDMARoutine.copy
	         $05f5 = DMARoutine
	         $05f9 = DMARoutine.wait
	         $05fd = DMARoutineEnd
	EMPTY: $05fd-$05ff ($0003 bytes)
	SECTION: $0600-$060f ($0010 bytes) ["Draw Routine Pointers"]
	         $0600 = Object_DrawRoutinePointers
	SECTION: $0610-$06c6 ($00b7 bytes) ["Collision Detection"]
	         $0610 = GetPlayerCollision
	         $0631 = GetPlayerCollision.right
	         $0632 = GetPlayerCollision.left
	         $064d = GetPlayerCollision.down
	         $064e = GetPlayerCollision.up
	         $0669 = IsSolid
	         $0675 = IsSolid.enemyspot
	         $0677 = GetCollisionAtBC
	         $067e = PlayerCollObject
	         $0681 = PlayerCollObject.loop
	         $0695 = GetObjPlyColl
	         $06ad = GetObjPlyColl.collisionX
	         $06c5 = GetObjPlyColl.collisionY
	SECTION: $06c7-$06f8 ($0032 bytes) ["Sprite Handler"]
	         $06c7 = HandleSprites
	         $06d5 = FillShadowOAM
	         $06dd = FillShadowOAM.fillLoop
	         $06f3 = FillShadowOAM.endLoop
	         $06f4 = FillShadowOAM.zeroTheRestLoop
	EMPTY: $06f9-$06ff ($0007 bytes)
	SECTION: $0700-$070a ($000b bytes) ["StateUpdate"]
	         $0700 = States
	         $070a = StateUpdate_None
	         $070a = StateStart_None
	SECTION: $070b-$08aa ($01a0 bytes) ["Player Handler"]
	         $070b = Player_HandleInput
	         $0715 = Player_HandleInput.endIf
	         $072d = Player_HandleInput.countTimer
	         $0731 = Player_HandleInput.afterBullet
	         $0748 = Player_HandleInput.handleRight
	         $0751 = Player_HandleInput.noInc1
	         $0759 = Player_HandleInput.noDec1
	         $075b = Player_HandleInput.handleLeft
	         $0764 = Player_HandleInput.noInc2
	         $076b = Player_HandleInput.noDec2
	         $076d = Player_HandleInput.handleUp
	         $0771 = Player_HandleInput.handleDown
	         $0775 = Player_HandleInput.afterPlayerInput
	         $077c = Player_HandleInput.handleMovement
	         $0789 = Charge
	         $0795 = Charge._no_diagonal
	         $0797 = MoveNormal
	         $07a3 = _Move
	         $07a3 = MoveNormal._no_diagonal
	         $07c2 = _Move.right
	         $07c5 = _Move.upright
	         $07cb = _Move.up
	         $07ce = _Move.upleft
	         $07d4 = _Move.left
	         $07d7 = _Move.downleft
	         $07dd = _Move.down
	         $07e0 = _Move.downright
	         $07e6 = ObjUpdate_Player
	         $07ef = Player_Draw
	         $0815 = ScrollDown
	         $082b = ScrollDown.collision
	         $0836 = ScrollUp
	         $084c = ScrollUp._no_tiles
	         $0860 = ScrollRight
	         $0876 = ScrollRight.collision
	         $0881 = ScrollLeft
	         $0897 = ScrollLeft._no_tiles
	SECTION: $08ab-$0a2b ($0181 bytes) ["Misc"]
	         $08ab = memcpy.mc
	         $08ab = memcpy
	         $08b5 = PopSlideCopy
	         $08bc = PopSlideCopy.loop
	         $08de = waitVBlank
	         $08de = waitVBlank.wait
	         $08e6 = CopyScreen
	         $08f0 = CopyScreen.ver_loopc
	         $08f2 = CopyScreen.hor_loopc
	         $0915 = CopyScreen.ver_loop
	         $0917 = CopyScreen.hor_loop
	         $092a = CopyText
	         $0935 = CopyText.line
	         $0940 = CopyTextBox
	         $0945 = CopyTextBox.loop
	         $0962 = CopyTextBox.loop2
	         $096e = SetCollectableFlag
	         $0980 = SetCollectableFlag.loop
	         $0987 = GetCollectableFlag
	         $099a = GetCollectableFlag.loop
	         $09a1 = _clear8
	         $09a6 = InitVariables
	         $09e0 = ClearRAM
	         $09e4 = ClearRAM.fillWRAMwithZeros
	         $09ed = ClearRAM.fillHRAMwithZeros
	         $09f3 = ClearTilemap
	         $09f7 = ClearTilemap.loop
	         $09fd = LoadFont
	         $0a07 = LoadFont.copyFontLoop
	         $0a1b = MapHandler_GetMapDataPointer
	SECTION: $0a2c-$0ba8 ($017d bytes) ["Map Handler"]
	         $0a2c = MapHandler_GetPointers
	         $0a52 = HandleGBCpalettes
	         $0a6b = HandleGBCpalettes.wait_u1
	         $0a8a = HandleGBCpalettes.nopalettes
	         $0a8c = HandleObjectTile
	         $0aa4 = HandleObjectTile.end
	         $0aa8 = m_MapHandler_LoadStripX
	         $0aaf = m_MapHandler_LoadStripX.copyLoop
	         $0ac2 = m_MapHandler_LoadStripX.noObject
	         $0ac8 = m_MapHandler_LoadStripX.wait_u2
	         $0ad9 = m_MapHandler_LoadStripX.wait_u3
	         $0aeb = !0
	         $0afa = m_MapHandler_LoadStripY
	         $0b01 = m_MapHandler_LoadStripY.copyLoop
	         $0b11 = m_MapHandler_LoadStripY.noObject
	         $0b17 = m_MapHandler_LoadStripY.wait_u4
	         $0b28 = m_MapHandler_LoadStripY.wait_u5
	         $0b50 = SetScroll
	         $0b75 = HandleOneTileStrip
	         $0b89 = HandleOneTileStrip.loadRight
	         $0b91 = HandleOneTileStrip.loadUp
	         $0b99 = HandleOneTileStrip.loadLeft
	         $0ba1 = HandleOneTileStrip.loadDown
	SECTION: $0ba9-$0d10 ($0168 bytes) ["Screens"]
	         $0ba9 = screen_title
	SECTION: $0d11-$0e03 ($00f3 bytes) ["Bullet"]
	         $0d11 = Object_Start_Bullet
	         $0d56 = Object_Start_Bullet.right
	         $0d5d = Object_Start_Bullet.upright
	         $0d65 = Object_Start_Bullet.up
	         $0d6c = Object_Start_Bullet.upleft
	         $0d74 = Object_Start_Bullet.left
	         $0d7b = Object_Start_Bullet.downleft
	         $0d83 = Object_Start_Bullet.down
	         $0d8a = Object_Start_Bullet.downright
	         $0d92 = Object_Start_Bullet.afterSettingVelocity
	         $0d93 = Object_Update_Bullet
	         $0dab = Object_Update_Bullet.HandleVelX
	         $0db0 = Object_Update_Bullet._negative_x
	         $0db7 = Object_Update_Bullet._positive_x
	         $0dbc = Object_Update_Bullet._end_x
	         $0dbe = Object_Update_Bullet.HandleVelY
	         $0dc3 = Object_Update_Bullet._negative_y
	         $0dca = Object_Update_Bullet._positive_y
	         $0dcf = Object_Update_Bullet._end_y
	         $0dda = Object_Update_Bullet.destroyBullet
	         $0de9 = Object_Update_Bullet.endOfSubroutine
	         $0dea = Object_DrawSingle
	         $0df7 = Object_Draw_Bullet
	SECTION: $0e04-$0eba ($00b7 bytes) ["Text Data"]
	         $0e04 = Text_Title_PressStart
	         $0e11 = Text_Debug_Warning
	         $0e96 = Text_Debug_Error
	SECTION: $0ebb-$0f3b ($0081 bytes) ["Message Box"]
	         $0ebb = StateStart_MessageBox
	         $0ec9 = StateStart_MessageBox.else_
	         $0ed2 = StateStart_MessageBox.endIf
	         $0ed7 = StateUpdate_MessageBox
	         $0ee9 = StateUpdate_MessageBox.OpeningBox
	         $0ef5 = StateUpdate_MessageBox.afterIf
	         $0efb = StateUpdate_MessageBox.StartDisplayText
	         $0f10 = StateUpdate_MessageBox.Waiting
	         $0f11 = StateUpdate_MessageBox.WaitForApress
	         $0f1d = StateUpdate_MessageBox.endIf
	         $0f1e = StateUpdate_MessageBox.ClosingBox
	         $0f2c = StateUpdate_MessageBox.loop
	SECTION: $0f3c-$0fb8 ($007d bytes) ["LYC handler"]
	         $0f3c = LYChandler
	         $0f50 = LYChandler.line8disableWindow
	         $0f50 = LYChandler.wait_u1
	         $0f73 = LYChandler.endIf
	         $0f7a = LYChandler.line144enableWindow
	         $0f7a = LYChandler.wait_u2
	         $0f9b = LYChandler.lineXshowMessageBox
	         $0f9e = LYChandler.wait
	SECTION: $0fb9-$102d ($0075 bytes) ["Title Screen"]
	         $0fb9 = StateStart_TitleScreen
	         $0ffc = StateStart_TitleScreen.loop_u1
	         $100d = StateStart_TitleScreen.loop_u2
	         $1019 = StateUpdate_TitleScreen
	         $1024 = StateUpdate_TitleScreen.startPressed
	SECTION: $102e-$1087 ($005a bytes) ["Text Handler"]
	         $102e = StateStart_DebugWarning
	         $103d = StateStart_DebugWarning.whiteTileLoop
	         $1061 = StateStart_DebugWarning.loop_u1
	         $1075 = StateUpdate_DebugWarning
	         $107e = StateUpdate_DebugWarning.goToTitleScreen
	SECTION: $1088-$10cd ($0046 bytes) ["Multiply"]
	         $1088 = Mul8x8to16
	SECTION: $10ce-$1111 ($0044 bytes) ["error handler"]
	         $10ce = ErrorHandler
	SECTION: $1112-$1154 ($0043 bytes) ["Controls"]
	         $1112 = GetJoypadStatus
	         $1154 = GetJoypadStatus.knownRet
	SECTION: $1155-$1192 ($003e bytes) ["SwarmerStill"]
	         $1155 = Object_Start_SwarmerStill
	         $1158 = Object_Update_SwarmerStill
	         $115b = Object_Draw_SwarmerStill
	         $115c = Object_PlyColl_SwarmerStill
	         $1192 = Object_PlyColl_SwarmerStill.noCollision
	SECTION: $1193-$11b3 ($0021 bytes) ["Green Gem"]
	         $1193 = Object_Start_GreenGem
	         $1196 = Object_Update_GreenGem
	         $1199 = Object_Draw_GreenGem
	         $11af = Object_PlyColl_GreenGem
	SECTION: $11b4-$11d4 ($0021 bytes) ["Red Gem"]
	         $11b4 = Object_Start_RedGem
	         $11b7 = Object_Update_RedGem
	         $11ba = Object_Draw_RedGem
	         $11d0 = Object_PlyColl_RedGem
	SECTION: $11d5-$11f5 ($0021 bytes) ["Purple Gem"]
	         $11d5 = Object_Start_PurpleGem
	         $11d8 = Object_Update_PurpleGem
	         $11db = Object_Draw_PurpleGem
	         $11f1 = Object_PlyColl_PurpleGem
	SECTION: $11f6-$1216 ($0021 bytes) ["Yellow Gem"]
	         $11f6 = Object_Start_YellowGem
	         $11f9 = Object_Update_YellowGem
	         $11fc = Object_Draw_YellowGem
	         $1212 = Object_PlyColl_YellowGem
	EMPTY: $1217-$3fff ($2de9 bytes)
	TOTAL EMPTY: $2e26 bytes

ROMX bank #1:
	SECTION: $4000-$48db ($08dc bytes) ["map_tutorial"]
	         $4000 = map_tutorial
	EMPTY: $48dc-$48ff ($0024 bytes)
	SECTION: $4900-$56ff ($0e00 bytes) ["tileset_crawdad"]
	         $4900 = tileset_crawdad_tiles
	         $5700 = tileset_crawdad_tiles_end
	SECTION: $5700-$5caf ($05b0 bytes) ["tileset_title_tiles"]
	         $5700 = tileset_title_tiles
	         $5cb0 = tileset_title_tiles_end
	EMPTY: $5cb0-$5cff ($0050 bytes)
	SECTION: $5d00-$60ff ($0400 bytes) ["font"]
	         $5d00 = font_tiles
	         $6100 = font_tiles_end
	SECTION: $6100-$629f ($01a0 bytes) ["sprites_crawdad_CGB"]
	         $6100 = sprites_crawdad_CGB_tiles
	         $62a0 = sprites_crawdad_CGB_tiles_end
	EMPTY: $62a0-$62ff ($0060 bytes)
	SECTION: $6300-$649f ($01a0 bytes) ["sprites_crawdad_DMG"]
	         $6300 = sprites_crawdad_DMG_tiles
	         $64a0 = sprites_crawdad_DMG_tiles_end
	EMPTY: $64a0-$64ff ($0060 bytes)
	SECTION: $6500-$665f ($0160 bytes) ["tileset_gui"]
	         $6500 = tileset_gui_tiles
	         $6660 = tileset_gui_tiles_end
	EMPTY: $6660-$667f ($0020 bytes)
	SECTION: $6680-$66bf ($0040 bytes) ["sprites_crawdad_CGB_palette"]
	         $6680 = sprites_crawdad_CGB_palette
	         $66c0 = sprites_crawdad_CGB_palette_end
	EMPTY: $66c0-$66ff ($0040 bytes)
	SECTION: $6700-$683f ($0140 bytes) ["sprites_crawdad"]
	         $6700 = sprites_crawdad_tiles
	         $6840 = sprites_crawdad_tiles_end
	EMPTY: $6840-$687f ($0040 bytes)
	SECTION: $6880-$68b7 ($0038 bytes) ["sprites_crawdad_DMG_palette"]
	         $6880 = sprites_crawdad_DMG_palette
	         $68b8 = sprites_crawdad_DMG_palette_end
	EMPTY: $68b8-$68ff ($0048 bytes)
	SECTION: $6900-$69ff ($0100 bytes) ["tileset_title_palassign"]
	         $6900 = tileset_title_palassign
	         $6a00 = tileset_title__palassign_end
	SECTION: $6a00-$6aff ($0100 bytes) ["tileset_crawdad_palassign"]
	         $6a00 = tileset_crawdad_palassign
	         $6b00 = tileset_crawdad__palassign_end
	SECTION: $6b00-$6b8f ($0090 bytes) ["tileset_title_meta"]
	         $6b00 = tileset_title_meta
	         $6b90 = tileset_title_meta_end
	EMPTY: $6b90-$6bff ($0070 bytes)
	SECTION: $6c00-$6c37 ($0038 bytes) ["sprites_crawdad_palette"]
	         $6c00 = sprites_crawdad_palette
	         $6c38 = sprites_crawdad_palette_end
	EMPTY: $6c38-$6c7f ($0048 bytes)
	SECTION: $6c80-$6c9f ($0020 bytes) ["tileset_crawdad_palette"]
	         $6c80 = tileset_crawdad_palette
	         $6ca0 = tileset_crawdad_palette_end
	EMPTY: $6ca0-$7dff ($1160 bytes)
	SECTION: $7e00-$7e00 ($0001 byte) ["map_tutorial metadata"]
	         $7e00 = map_tutorial_meta
	EMPTY: $7e01-$7eff ($00ff bytes)
	SECTION: $7f00-$7f2f ($0030 bytes) ["map_tutorial objects"]
	         $7f00 = map_tutorial_obj
	EMPTY: $7f30-$7fff ($00d0 bytes)
	TOTAL EMPTY: $1603 bytes

WRAM0 bank #0:
	SECTION: $c000-$c1ff ($0200 bytes) ["Object Arrays 2"]
	         $c000 = Object_IDs
	         $c100 = Object_Types
	         $c100 = Object_IDs.end
	         $c200 = Object_Types.end
	SECTION: $c200-$c2ff ($0100 bytes) ["Shadow OAM"]
	         $c200 = wShadowOAM
	         $c2a0 = wShadowOAM.end
	SECTION: $c300-$c323 ($0024 bytes) ["Buffers"]
	         $c300 = wTextBuffer
	         $c324 = wTextBuffer.end
	SECTION: $c324-$c334 ($0011 bytes) ["Main variables"]
	         $c324 = wPlayerPos
	         $c324 = wPlayerPos.x_subpixel
	         $c324 = wPlayerPos.x
	         $c324 = wPlayerPos.x_low
	         $c324 = WRAMvariables
	         $c325 = wPlayerPos.x_high
	         $c325 = wPlayerPos.x_metatile
	         $c326 = wPlayerPos.y_subpixel
	         $c326 = wPlayerPos.y
	         $c326 = wPlayerPos.y_low
	         $c327 = wPlayerPos.y_metatile
	         $c327 = wPlayerPos.y_high
	         $c328 = wCurrMoveSpeed
	         $c329 = wPlayerDirection
	         $c32a = wBooleans
	         $c32b = wCollisionResult1
	         $c32c = wCollisionResult2
	         $c32d = wCurrCheckOnScreenObj
	         $c32e = wShootTimer
	         $c32f = wPlayerHealth
	         $c330 = wCurrGemDec1
	         $c331 = wCurrGemDec2
	         $c332 = wMsgBoxAnimTimer
	         $c333 = wMsgBoxAnimState
	         $c334 = wHandlingUpdateMethod
	         $c335 = WRAMvariablesEnd
	EMPTY: $c335-$c33f ($000b bytes)
	SECTION: $c340-$c35f ($0020 bytes) ["Object Arrays 3"]
	         $c340 = Object_Flags
	         $c360 = Object_Flags.end
	EMPTY: $c360-$c3ff ($00a0 bytes)
	SECTION: $c400-$c401 ($0002 bytes) ["Debug variables"]
	         $c400 = iErrorCode.low
	         $c400 = iErrorCode
	         $c401 = iErrorCode.high
	EMPTY: $c402-$cfff ($0bfe bytes)
	TOTAL EMPTY: $0ca9 bytes

WRAMX bank #1:
	SECTION: $d000-$dfff ($1000 bytes) ["Object Arrays 1"]
	         $d000 = Object_Table
	         $d000 = Obj.state
	         $d000 = Obj
	         $d001 = Obj.x
	         $d001 = Obj.x_low
	         $d001 = Obj.x_subpixel
	         $d002 = Obj.x_metatile
	         $d002 = Obj.x_high
	         $d003 = Obj.y_low
	         $d003 = Obj.y
	         $d003 = Obj.y_subpixel
	         $d004 = Obj.y_metatile
	         $d004 = Obj.y_high
	         $d005 = Obj.direction
	         $d006 = Obj.velocity_x
	         $d007 = Obj.velocity_y
	TOTAL EMPTY: $0000 bytes

HRAM bank #0:
	SECTION: $ff80-$ff94 ($0015 bytes) ["HRAM variables"]
	         $ff80 = HRAMvariables
	         $ff80 = hCurrentState
	         $ff81 = hMapLoaded
	         $ff82 = hMapWidth
	         $ff83 = hJoypadCurrent
	         $ff84 = hJoypadLast
	         $ff85 = hJoypadPressed
	         $ff86 = hJoypadReleased
	         $ff87 = hGameboyType
	         $ff88 = hRegStorage1
	         $ff89 = hRegStorage2
	         $ff8a = hRegStorage3
	         $ff8b = hMapLoaderMode
	         $ff8c = hMapLoaderLoopCounter
	         $ff8d = hMapLoaderLoopDEHL
	         $ff91 = hSPstorage
	         $ff91 = hSPstorage.low
	         $ff92 = hSPstorage.high
	         $ff93 = hSCX
	         $ff94 = hSCY
	         $ff95 = HRAMvariablesEnd
	SECTION: $ff95-$ff9c ($0008 bytes) ["OAM DMA"]
	         $ff95 = hOAMDMA
	EMPTY: $ff9d-$fffe ($0062 bytes)
	TOTAL EMPTY: $0062 bytes
