ROM0 bank #0:
  SECTION: $0000-$0000 ($0001 byte) ["WaitHBlank but reg B is free"]
           $0000 = RunSubroutine
  SECTION: $0001-$0033 ($0033 bytes) ["Init"]
           $0001 = Start
           $0020 = Start.halt
  SECTION: $0038-$003a ($0003 bytes) ["Erorr handler"]
           $0038 = Error2
  SECTION: $0040-$0045 ($0006 bytes) ["Vblank Vector"]
           $0040 = Vblank
  SECTION: $0048-$0050 ($0009 bytes) ["LYC Interrupt"]
  SECTION: $0060-$00b5 ($0056 bytes) ["Sprite orders"]
           $0060 = SprCrawdad_0
           $0064 = SprCrawdad_45
           $0068 = SprCrawdad_90
           $006c = SprCrawdad_135
           $0070 = SprCrawdad_180
           $0074 = SprCrawdad_225
           $0078 = SprCrawdad_270
           $007c = SprCrawdad_315
           $0080 = SprPlayer_0
           $0084 = SprPlayer_45
           $0088 = SprPlayer_90
           $008c = SprPlayer_135
           $0090 = SprPlayer_180
           $0094 = SprPlayer_225
           $0098 = SprPlayer_270
           $009c = SprPlayer_315
           $00a0 = SprBlueGem
           $00a4 = SprBullet
           $00a6 = SprGreenGem
           $00aa = SprPurpleGem
           $00ae = SprRedGem
           $00b2 = SprYellowGem
  SECTION: $00c0-$00ff ($0040 bytes) ["Tileset Solidness"]
           $00c0 = tileset_solidness
  SECTION: $0100-$014f ($0050 bytes) ["Jumpstart Code"]
           $0100 = Jumpstart
  SECTION: $0150-$01d9 ($008a bytes) ["Common Gem Code"]
           $0150 = Object_Start_GemCommon
           $0170 = Object_Start_GemCommon.loop
           $0175 = Object_Update_GemCommon
           $018a = Object_Update_GemCommon.unloadGem
           $0199 = Obj_PlyColl_GemCommon
           $01d9 = Obj_PlyColl_GemCommon.noCollision
  SECTION: $01da-$01fa ($0021 bytes) ["Blue Gem"]
           $01da = Object_Start_BlueGem
           $01dd = Object_Update_BlueGem
           $01e0 = Object_Draw_BlueGem
           $01f6 = Object_PlyColl_BlueGem
  SECTION: $0200-$02ff ($0100 bytes) ["LUTs"]
           $0200 = Mul4LUT
  SECTION: $0300-$030f ($0010 bytes) ["Start Routine Pointers"]
           $0300 = Object_StartRoutinePointers
  SECTION: $0310-$03ff ($00f0 bytes) ["Object Manager"]
           $0310 = Object_SpawnObject
           $0313 = Object_SpawnObject.findSlotloop
           $031c = Object_SpawnObject.yesDoThisOne
           $0330 = Object_Update
           $0333 = Object_Update.objectUpdateLoop
           $0344 = Object_Update.continue
           $034a = Object_CheckOnScreen
           $036c = Object_CheckOnScreen.otherwise
           $038b = Object_CheckOnScreen.onScreen
           $0392 = Object_CheckOnScreen.offScreen
           $0399 = Object_DestroyCurrent
           $03a1 = Object_CleanTypeArray
           $03a4 = Object_CleanTypeArray.loop
           $03ad = Object_CleanTypeArray.writeZero
           $03af = Object_CleanTypeArray.notWriteZero
           $03b4 = Object_PlyColl_None
           $03b4 = Object_Update_None
           $03b4 = Object_Start_None
           $03b4 = Object_Draw_None
           $03b6 = PrepareSpriteDraw
  SECTION: $0400-$040f ($0010 bytes) ["Update Routine Pointers"]
           $0400 = Object_UpdateRoutinePointers
  SECTION: $0410-$04f5 ($00e6 bytes) ["Title Screen Loop"]
           $0410 = StateStart_GameLoop
           $0434 = StateStart_GameLoop.noGBC
           $0468 = StateStart_GameLoop.noGBC2
           $0479 = StateStart_GameLoop._after_sprites
           $0490 = StateStart_GameLoop.clear_loop
           $04c6 = StateStart_GameLoop.loop
           $04db = StateUpdate_GameLoop
           $04ec = StateUpdate_GameLoop.checkLoop
  SECTION: $0500-$050f ($0010 bytes) ["Player Collision Routine Pointers"]
           $0500 = Object_PlyCollRoutinePointers
  SECTION: $0510-$05e6 ($00d7 bytes) ["User Interface"]
           $0510 = UpdateHUD
           $0536 = UpdateHUD.tile1
           $0540 = UpdateHUD.notEmpty1
           $054b = UpdateHUD.notHalf1
           $054e = UpdateHUD.tile2
           $0558 = UpdateHUD.notEmpty2
           $0562 = UpdateHUD.notHalf2
           $0565 = UpdateHUD.tile3
           $056c = UpdateHUD.notEmpty3
           $0573 = UpdateHUD.notHalf3
           $0577 = ClearWindowLayer
           $057c = ClearWindowLayer.loop1
           $058f = ClearWindowLayer.loop2
           $0598 = InitWindowLayer
           $05a1 = InitWindowLayer.loopHor1
           $05b1 = InitWindowLayer.loopTextRow1
           $05c6 = InitWindowLayer.loopTextRow2
           $05d6 = InitWindowLayer.loopHor2
  SECTION: $05e7-$05fb ($0015 bytes) ["OAM DMA routine"]
           $05e7 = CopyDMARoutine
           $05ed = CopyDMARoutine.copy
           $05f4 = DMARoutine
           $05f8 = DMARoutine.wait
           $05fc = DMARoutineEnd
  SECTION: $0600-$060f ($0010 bytes) ["Draw Routine Pointers"]
           $0600 = Object_DrawRoutinePointers
  SECTION: $0610-$06c6 ($00b7 bytes) ["Collision Detection"]
           $0610 = GetPlayerCollision
           $0631 = GetPlayerCollision.right
           $0632 = GetPlayerCollision.left
           $064d = GetPlayerCollision.down
           $064e = GetPlayerCollision.up
           $0669 = IsSolid
           $0675 = IsSolid.enemyspot
           $0677 = GetCollisionAtBC
           $067e = PlayerCollObject
           $0681 = PlayerCollObject.loop
           $0695 = GetObjPlyColl
           $06ad = GetObjPlyColl.collisionX
           $06c5 = GetObjPlyColl.collisionY
  SECTION: $06c7-$06f8 ($0032 bytes) ["Sprite Handler"]
           $06c7 = HandleSprites
           $06d5 = FillShadowOAM
           $06dd = FillShadowOAM.fillLoop
           $06f3 = FillShadowOAM.endLoop
           $06f4 = FillShadowOAM.zeroTheRestLoop
  SECTION: $0700-$070a ($000b bytes) ["StateUpdate"]
           $0700 = States
           $070a = StateUpdate_None
           $070a = StateStart_None
  SECTION: $070b-$08aa ($01a0 bytes) ["Player Handler"]
           $070b = Player_HandleInput
           $0715 = Player_HandleInput.endIf
           $072d = Player_HandleInput.countTimer
           $0731 = Player_HandleInput.afterBullet
           $0748 = Player_HandleInput.handleRight
           $0751 = Player_HandleInput.noInc1
           $0759 = Player_HandleInput.noDec1
           $075b = Player_HandleInput.handleLeft
           $0764 = Player_HandleInput.noInc2
           $076b = Player_HandleInput.noDec2
           $076d = Player_HandleInput.handleUp
           $0771 = Player_HandleInput.handleDown
           $0775 = Player_HandleInput.afterPlayerInput
           $077c = Player_HandleInput.handleMovement
           $0789 = Charge
           $0795 = Charge._no_diagonal
           $0797 = MoveNormal
           $07a3 = _Move
           $07a3 = MoveNormal._no_diagonal
           $07c2 = _Move.right
           $07c5 = _Move.upright
           $07cb = _Move.up
           $07ce = _Move.upleft
           $07d4 = _Move.left
           $07d7 = _Move.downleft
           $07dd = _Move.down
           $07e0 = _Move.downright
           $07e6 = ObjUpdate_Player
           $07ef = Player_Draw
           $0815 = ScrollDown
           $082b = ScrollDown.collision
           $0836 = ScrollUp
           $084c = ScrollUp._no_tiles
           $0860 = ScrollRight
           $0876 = ScrollRight.collision
           $0881 = ScrollLeft
           $0897 = ScrollLeft._no_tiles
  SECTION: $08ab-$0a2c ($0182 bytes) ["Misc"]
           $08ab = memcpy.mc
           $08ab = memcpy
           $08b5 = PopSlideCopy
           $08bc = PopSlideCopy.loop
           $08de = waitVBlank
           $08de = waitVBlank.wait
           $08e7 = CopyScreen
           $08f1 = CopyScreen.ver_loopc
           $08f3 = CopyScreen.hor_loopc
           $0916 = CopyScreen.ver_loop
           $0918 = CopyScreen.hor_loop
           $092b = CopyText
           $0936 = CopyText.line
           $0941 = CopyTextBox
           $0946 = CopyTextBox.loop
           $0963 = CopyTextBox.loop2
           $096f = SetCollectableFlag
           $0981 = SetCollectableFlag.loop
           $0988 = GetCollectableFlag
           $099b = GetCollectableFlag.loop
           $09a2 = _clear8
           $09a7 = InitVariables
           $09e1 = ClearRAM
           $09e5 = ClearRAM.fillWRAMwithZeros
           $09ee = ClearRAM.fillHRAMwithZeros
           $09f4 = ClearTilemap
           $09f8 = ClearTilemap.loop
           $09fe = LoadFont
           $0a08 = LoadFont.copyFontLoop
           $0a1c = MapHandler_GetMapDataPointer
  SECTION: $0a2d-$0b9d ($0171 bytes) ["Map Handler"]
           $0a2d = MapHandler_GetPointers
           $0a53 = HandleGBCpalettes
           $0a6b = HandleGBCpalettes.wait_u1
           $0a88 = HandleGBCpalettes.nopalettes
           $0a8a = HandleObjectTile
           $0aa2 = HandleObjectTile.end
           $0aa6 = m_MapHandler_LoadStripX
           $0aad = m_MapHandler_LoadStripX.copyLoop
           $0abd = m_MapHandler_LoadStripX.noObject
           $0ac3 = m_MapHandler_LoadStripX.wait_u2
           $0ad3 = m_MapHandler_LoadStripX.wait_u3
           $0ae4 = !0
           $0af3 = m_MapHandler_LoadStripY
           $0afa = m_MapHandler_LoadStripY.copyLoop
           $0b0a = m_MapHandler_LoadStripY.noObject
           $0b10 = m_MapHandler_LoadStripY.wait_u4
           $0b20 = m_MapHandler_LoadStripY.wait_u5
           $0b47 = SetScroll
           $0b6a = HandleOneTileStrip
           $0b7e = HandleOneTileStrip.loadRight
           $0b86 = HandleOneTileStrip.loadUp
           $0b8e = HandleOneTileStrip.loadLeft
           $0b96 = HandleOneTileStrip.loadDown
  SECTION: $0b9e-$0d05 ($0168 bytes) ["Screens"]
           $0b9e = screen_title
  SECTION: $0d06-$0df8 ($00f3 bytes) ["Bullet"]
           $0d06 = Object_Start_Bullet
           $0d4b = Object_Start_Bullet.right
           $0d52 = Object_Start_Bullet.upright
           $0d5a = Object_Start_Bullet.up
           $0d61 = Object_Start_Bullet.upleft
           $0d69 = Object_Start_Bullet.left
           $0d70 = Object_Start_Bullet.downleft
           $0d78 = Object_Start_Bullet.down
           $0d7f = Object_Start_Bullet.downright
           $0d87 = Object_Start_Bullet.afterSettingVelocity
           $0d88 = Object_Update_Bullet
           $0da0 = Object_Update_Bullet.HandleVelX
           $0da5 = Object_Update_Bullet._negative_x
           $0dac = Object_Update_Bullet._positive_x
           $0db1 = Object_Update_Bullet._end_x
           $0db3 = Object_Update_Bullet.HandleVelY
           $0db8 = Object_Update_Bullet._negative_y
           $0dbf = Object_Update_Bullet._positive_y
           $0dc4 = Object_Update_Bullet._end_y
           $0dcf = Object_Update_Bullet.destroyBullet
           $0dde = Object_Update_Bullet.endOfSubroutine
           $0ddf = Object_DrawSingle
           $0dec = Object_Draw_Bullet
  SECTION: $0df9-$0eaf ($00b7 bytes) ["Text Data"]
           $0df9 = Text_Title_PressStart
           $0e06 = Text_Debug_Warning
           $0e8b = Text_Debug_Error
  SECTION: $0eb0-$0f30 ($0081 bytes) ["Message Box"]
           $0eb0 = StateStart_MessageBox
           $0ebe = StateStart_MessageBox.else_
           $0ec7 = StateStart_MessageBox.endIf
           $0ecc = StateUpdate_MessageBox
           $0ede = StateUpdate_MessageBox.OpeningBox
           $0eea = StateUpdate_MessageBox.afterIf
           $0ef0 = StateUpdate_MessageBox.StartDisplayText
           $0f05 = StateUpdate_MessageBox.Waiting
           $0f06 = StateUpdate_MessageBox.WaitForApress
           $0f12 = StateUpdate_MessageBox.endIf
           $0f13 = StateUpdate_MessageBox.ClosingBox
           $0f21 = StateUpdate_MessageBox.loop
  SECTION: $0f31-$0fab ($007b bytes) ["LYC handler"]
           $0f31 = LYChandler
           $0f45 = LYChandler.line8disableWindow
           $0f45 = LYChandler.wait_u2
           $0f67 = LYChandler.endIf
           $0f6e = LYChandler.line144enableWindow
           $0f6e = LYChandler.wait_u3
           $0f8e = LYChandler.lineXshowMessageBox
           $0f91 = LYChandler.wait
  SECTION: $0fac-$101e ($0073 bytes) ["Title Screen"]
           $0fac = StateStart_TitleScreen
           $0fee = StateStart_TitleScreen.loop_u3
           $0ffe = StateStart_TitleScreen.loop_u4
           $100a = StateUpdate_TitleScreen
           $1015 = StateUpdate_TitleScreen.startPressed
  SECTION: $101f-$1077 ($0059 bytes) ["Text Handler"]
           $101f = StateStart_DebugWarning
           $102e = StateStart_DebugWarning.whiteTileLoop
           $1051 = StateStart_DebugWarning.loop_u1
           $1065 = StateUpdate_DebugWarning
           $106e = StateUpdate_DebugWarning.goToTitleScreen
  SECTION: $1078-$10bd ($0046 bytes) ["Multiply"]
           $1078 = Mul8x8to16
  SECTION: $10be-$1101 ($0044 bytes) ["error handler"]
           $10be = ErrorHandler
  SECTION: $1102-$1144 ($0043 bytes) ["Controls"]
           $1102 = GetJoypadStatus
           $1144 = GetJoypadStatus.knownRet
  SECTION: $1145-$1182 ($003e bytes) ["SwarmerStill"]
           $1145 = Object_Start_SwarmerStill
           $1148 = Object_Update_SwarmerStill
           $114b = Object_Draw_SwarmerStill
           $114c = Object_PlyColl_SwarmerStill
           $1182 = Object_PlyColl_SwarmerStill.noCollision
  SECTION: $1183-$11a3 ($0021 bytes) ["Green Gem"]
           $1183 = Object_Start_GreenGem
           $1186 = Object_Update_GreenGem
           $1189 = Object_Draw_GreenGem
           $119f = Object_PlyColl_GreenGem
  SECTION: $11a4-$11c4 ($0021 bytes) ["Red Gem"]
           $11a4 = Object_Start_RedGem
           $11a7 = Object_Update_RedGem
           $11aa = Object_Draw_RedGem
           $11c0 = Object_PlyColl_RedGem
  SECTION: $11c5-$11e5 ($0021 bytes) ["Purple Gem"]
           $11c5 = Object_Start_PurpleGem
           $11c8 = Object_Update_PurpleGem
           $11cb = Object_Draw_PurpleGem
           $11e1 = Object_PlyColl_PurpleGem
  SECTION: $11e6-$1206 ($0021 bytes) ["Yellow Gem"]
           $11e6 = Object_Start_YellowGem
           $11e9 = Object_Update_YellowGem
           $11ec = Object_Draw_YellowGem
           $1202 = Object_PlyColl_YellowGem
    SLACK: $2e37 bytes

ROMX bank #1:
  SECTION: $4000-$48db ($08dc bytes) ["map_tutorial"]
           $4000 = map_tutorial
  SECTION: $4900-$56ff ($0e00 bytes) ["tileset_crawdad"]
           $4900 = tileset_crawdad_tiles
           $5700 = tileset_crawdad_tiles_end
  SECTION: $5700-$5caf ($05b0 bytes) ["tileset_title_tiles"]
           $5700 = tileset_title_tiles
           $5cb0 = tileset_title_tiles_end
  SECTION: $5d00-$60ff ($0400 bytes) ["font"]
           $5d00 = font_tiles
           $6100 = font_tiles_end
  SECTION: $6100-$629f ($01a0 bytes) ["sprites_crawdad_CGB"]
           $6100 = sprites_crawdad_CGB_tiles
           $62a0 = sprites_crawdad_CGB_tiles_end
  SECTION: $6300-$649f ($01a0 bytes) ["sprites_crawdad_DMG"]
           $6300 = sprites_crawdad_DMG_tiles
           $64a0 = sprites_crawdad_DMG_tiles_end
  SECTION: $6500-$665f ($0160 bytes) ["tileset_gui"]
           $6500 = tileset_gui_tiles
           $6660 = tileset_gui_tiles_end
  SECTION: $6680-$66bf ($0040 bytes) ["sprites_crawdad_CGB_palette"]
           $6680 = sprites_crawdad_CGB_palette
           $66c0 = sprites_crawdad_CGB_palette_end
  SECTION: $6700-$683f ($0140 bytes) ["sprites_crawdad"]
           $6700 = sprites_crawdad_tiles
           $6840 = sprites_crawdad_tiles_end
  SECTION: $6880-$68b7 ($0038 bytes) ["sprites_crawdad_DMG_palette"]
           $6880 = sprites_crawdad_DMG_palette
           $68b8 = sprites_crawdad_DMG_palette_end
  SECTION: $6900-$69ff ($0100 bytes) ["tileset_title_palassign"]
           $6900 = tileset_title_palassign
           $6a00 = tileset_title__palassign_end
  SECTION: $6a00-$6aff ($0100 bytes) ["tileset_crawdad_palassign"]
           $6a00 = tileset_crawdad_palassign
           $6b00 = tileset_crawdad__palassign_end
  SECTION: $6b00-$6b8f ($0090 bytes) ["tileset_title_meta"]
           $6b00 = tileset_title_meta
           $6b90 = tileset_title_meta_end
  SECTION: $6c00-$6c37 ($0038 bytes) ["sprites_crawdad_palette"]
           $6c00 = sprites_crawdad_palette
           $6c38 = sprites_crawdad_palette_end
  SECTION: $6c80-$6c9f ($0020 bytes) ["tileset_crawdad_palette"]
           $6c80 = tileset_crawdad_palette
           $6ca0 = tileset_crawdad_palette_end
  SECTION: $7e00-$7e00 ($0001 byte) ["map_tutorial metadata"]
           $7e00 = map_tutorial_meta
  SECTION: $7f00-$7f2f ($0030 bytes) ["map_tutorial objects"]
           $7f00 = map_tutorial_obj
    SLACK: $1603 bytes

WRAM0 bank #0:
  SECTION: $c000-$c1ff ($0200 bytes) ["Object Arrays 2"]
           $c000 = Object_IDs
           $c100 = Object_Types
           $c100 = Object_IDs.end
           $c200 = Object_Types.end
  SECTION: $c200-$c2ff ($0100 bytes) ["Shadow OAM"]
           $c200 = wShadowOAM
           $c2a0 = wShadowOAM.end
  SECTION: $c300-$c323 ($0024 bytes) ["Buffers"]
           $c300 = wTextBuffer
           $c324 = wTextBuffer.end
  SECTION: $c324-$c334 ($0011 bytes) ["Main variables"]
           $c324 = wPlayerPos
           $c324 = wPlayerPos.x_subpixel
           $c324 = wPlayerPos.x
           $c324 = wPlayerPos.x_low
           $c324 = WRAMvariables
           $c325 = wPlayerPos.x_high
           $c325 = wPlayerPos.x_metatile
           $c326 = wPlayerPos.y_subpixel
           $c326 = wPlayerPos.y
           $c326 = wPlayerPos.y_low
           $c327 = wPlayerPos.y_metatile
           $c327 = wPlayerPos.y_high
           $c328 = wCurrMoveSpeed
           $c329 = wPlayerDirection
           $c32a = wBooleans
           $c32b = wCollisionResult1
           $c32c = wCollisionResult2
           $c32d = wCurrCheckOnScreenObj
           $c32e = wShootTimer
           $c32f = wPlayerHealth
           $c330 = wCurrGemDec1
           $c331 = wCurrGemDec2
           $c332 = wMsgBoxAnimTimer
           $c333 = wMsgBoxAnimState
           $c334 = wHandlingUpdateMethod
           $c335 = WRAMvariablesEnd
  SECTION: $c340-$c35f ($0020 bytes) ["Object Arrays 3"]
           $c340 = Object_Flags
           $c360 = Object_Flags.end
  SECTION: $c400-$c401 ($0002 bytes) ["Debug variables"]
           $c400 = iErrorCode.low
           $c400 = iErrorCode
           $c401 = iErrorCode.high
    SLACK: $0ca9 bytes

WRAMX bank #1:
  SECTION: $d000-$dfff ($1000 bytes) ["Object Arrays 1"]
           $d000 = Object_Table
           $d000 = Obj.state
           $d000 = Obj
           $d001 = Obj.x
           $d001 = Obj.x_low
           $d001 = Obj.x_subpixel
           $d002 = Obj.x_metatile
           $d002 = Obj.x_high
           $d003 = Obj.y_low
           $d003 = Obj.y
           $d003 = Obj.y_subpixel
           $d004 = Obj.y_metatile
           $d004 = Obj.y_high
           $d005 = Obj.direction
           $d006 = Obj.velocity_x
           $d007 = Obj.velocity_y
    SLACK: $0000 bytes

HRAM bank #0:
  SECTION: $ff80-$ff94 ($0015 bytes) ["HRAM variables"]
           $ff80 = HRAMvariables
           $ff80 = hCurrentState
           $ff81 = hMapLoaded
           $ff82 = hMapWidth
           $ff83 = hJoypadCurrent
           $ff84 = hJoypadLast
           $ff85 = hJoypadPressed
           $ff86 = hJoypadReleased
           $ff87 = hGameboyType
           $ff88 = hRegStorage1
           $ff89 = hRegStorage2
           $ff8a = hRegStorage3
           $ff8b = hMapLoaderMode
           $ff8c = hMapLoaderLoopCounter
           $ff8d = hMapLoaderLoopDEHL
           $ff91 = hSPstorage
           $ff91 = hSPstorage.low
           $ff92 = hSPstorage.high
           $ff93 = hSCX
           $ff94 = hSCY
           $ff95 = HRAMvariablesEnd
  SECTION: $ff95-$ff9c ($0008 bytes) ["OAM DMA"]
           $ff95 = hOAMDMA
    SLACK: $0062 bytes

USED:
    ROM0: $11c9 bytes in 1 bank
    ROMX: $29fd bytes in 1 bank
    WRAM0: $0357 bytes in 1 bank
    WRAMX: $1000 bytes in 1 bank
    HRAM: $001d bytes in 1 bank
