ROM0 bank #0:
  SECTION: $0000-$0006 ($0007 bytes) ["WaitHBlank"]
           $0000 = waitHBlank.wait
           $0000 = waitHBlank
  SECTION: $0007-$0028 ($0022 bytes) ["Init"]
           $0007 = Start
           $0025 = Start.halt
  SECTION: $0038-$003a ($0003 bytes) ["Erorr handler"]
           $0038 = Error2
  SECTION: $0040-$0043 ($0004 bytes) ["Vblank Vector"]
  SECTION: $0048-$004a ($0003 bytes) ["LYC Interrupt"]
  SECTION: $004b-$006b ($0021 bytes) ["Blue Gem"]
           $004b = Object_Start_BlueGem
           $004e = Object_Update_BlueGem
           $0051 = Object_Draw_BlueGem
           $0067 = Object_PlyColl_BlueGem
  SECTION: $0080-$00bf ($0040 bytes) ["Tileset Solidness"]
           $0080 = tileset_solidness
  SECTION: $00c0-$00f5 ($0036 bytes) ["Sprite orders"]
           $00c0 = SpriteOrders_Player
           $00c0 = SprPlayer_0
           $00c4 = SprPlayer_45
           $00c8 = SprPlayer_90
           $00cc = SprPlayer_135
           $00d0 = SprPlayer_180
           $00d4 = SprPlayer_225
           $00d8 = SprPlayer_270
           $00dc = SprPlayer_315
           $00e0 = SprBlueGem
           $00e4 = SprBullet
           $00e6 = SprGreenGem
           $00ea = SprPurpleGem
           $00ee = SprRedGem
           $00f2 = SprYellowGem
  SECTION: $0100-$014f ($0050 bytes) ["Jumpstart Code"]
           $0100 = Jumpstart
  SECTION: $0150-$01da ($008b bytes) ["Common Gem Code"]
           $0150 = Object_Start_GemCommon
           $0170 = Object_Start_GemCommon.loop
           $0175 = Object_Update_GemCommon
           $018a = Object_Update_GemCommon.unloadGem
           $0199 = Obj_PlyColl_GemCommon
           $01da = Obj_PlyColl_GemCommon.noCollision
  SECTION: $01db-$01fb ($0021 bytes) ["Green Gem"]
           $01db = Object_Start_GreenGem
           $01de = Object_Update_GreenGem
           $01e1 = Object_Draw_GreenGem
           $01f7 = Object_PlyColl_GreenGem
  SECTION: $0200-$02ff ($0100 bytes) ["LUTs"]
           $0200 = Mul4LUT
  SECTION: $0300-$030d ($000e bytes) ["Start Routine Pointers"]
           $0300 = Object_StartRoutinePointers
  SECTION: $030e-$03e4 ($00d7 bytes) ["User Interface"]
           $030e = UpdateHUD
           $0334 = UpdateHUD.tile1
           $033e = UpdateHUD.notEmpty1
           $0349 = UpdateHUD.notHalf1
           $034c = UpdateHUD.tile2
           $0356 = UpdateHUD.notEmpty2
           $0360 = UpdateHUD.notHalf2
           $0363 = UpdateHUD.tile3
           $036a = UpdateHUD.notEmpty3
           $0371 = UpdateHUD.notHalf3
           $0375 = ClearWindowLayer
           $037a = ClearWindowLayer.loop1
           $038d = ClearWindowLayer.loop2
           $0396 = InitWindowLayer
           $039f = InitWindowLayer.loopHor1
           $03af = InitWindowLayer.loopTextRow1
           $03c4 = InitWindowLayer.loopTextRow2
           $03d4 = InitWindowLayer.loopHor2
  SECTION: $03e5-$03ff ($001b bytes) ["Vblank Handler"]
           $03e5 = Vblank
  SECTION: $0400-$040d ($000e bytes) ["Update Routine Pointers"]
           $0400 = Object_UpdateRoutinePointers
  SECTION: $040e-$04dd ($00d0 bytes) ["Title Screen Loop"]
           $040e = StateStart_GameLoop
           $0432 = StateStart_GameLoop.noGBC
           $0475 = StateStart_GameLoop.clear_loop
           $04ab = StateStart_GameLoop.loop
           $04c0 = StateUpdate_GameLoop
           $04d4 = StateUpdate_GameLoop.checkLoop
  SECTION: $04de-$04fe ($0021 bytes) ["Red Gem"]
           $04de = Object_Start_RedGem
           $04e1 = Object_Update_RedGem
           $04e4 = Object_Draw_RedGem
           $04fa = Object_PlyColl_RedGem
  SECTION: $0500-$050d ($000e bytes) ["Player Collision Routine Pointers"]
           $0500 = Object_PlyCollRoutinePointers
  SECTION: $050e-$05d8 ($00cb bytes) ["Collision Detection"]
           $050e = GetPlayerCollision
           $052f = GetPlayerCollision.right
           $0530 = GetPlayerCollision.left
           $054b = GetPlayerCollision.down
           $054c = GetPlayerCollision.up
           $0567 = IsSolid
           $0573 = IsSolid.enemyspot
           $0575 = GetCollisionAtBC
           $057c = PlayerCollObject
           $057f = PlayerCollObject.loop
           $0595 = GetObjPlyColl
           $05a5 = GetObjPlyColl.noCarryX
           $05b7 = GetObjPlyColl.collisionX
           $05c5 = GetObjPlyColl.noCarryY
           $05d7 = GetObjPlyColl.collisionY
  SECTION: $05d9-$05f9 ($0021 bytes) ["Purple Gem"]
           $05d9 = Object_Start_PurpleGem
           $05dc = Object_Update_PurpleGem
           $05df = Object_Draw_PurpleGem
           $05f5 = Object_PlyColl_PurpleGem
  SECTION: $0600-$060d ($000e bytes) ["Draw Routine Pointers"]
           $0600 = Object_DrawRoutinePointers
  SECTION: $060e-$06c4 ($00b7 bytes) ["Text Data"]
           $060e = Text_Title_PressStart
           $061b = Text_Debug_Warning
           $06a0 = Text_Debug_Error
  SECTION: $06c5-$06fa ($0036 bytes) ["Sprite Handler"]
           $06c5 = HandleSprites
           $06d5 = FillShadowOAM
           $06dd = FillShadowOAM.fillLoop
           $06f5 = FillShadowOAM.endLoop
           $06f6 = FillShadowOAM.zeroTheRestLoop
  SECTION: $0700-$070a ($000b bytes) ["StateUpdate"]
           $0700 = States
           $070a = StateUpdate_None
           $070a = StateStart_None
  SECTION: $070b-$08a8 ($019e bytes) ["Player Handler"]
           $070b = Player_HandleInput
           $0715 = Player_HandleInput.endIf
           $072d = Player_HandleInput.countTimer
           $0731 = Player_HandleInput.afterBullet
           $0748 = Player_HandleInput.handleRight
           $0751 = Player_HandleInput.noInc1
           $0759 = Player_HandleInput.noDec1
           $075b = Player_HandleInput.handleLeft
           $0764 = Player_HandleInput.noInc2
           $076b = Player_HandleInput.noDec2
           $076d = Player_HandleInput.handleUp
           $0771 = Player_HandleInput.handleDown
           $0775 = Player_HandleInput.afterPlayerInput
           $077c = Player_HandleInput.handleMovement
           $0789 = Charge
           $0795 = Charge._no_diagonal
           $0797 = MoveNormal
           $07a3 = _Move
           $07a3 = MoveNormal._no_diagonal
           $07c0 = _Move.right
           $07c3 = _Move.upright
           $07c9 = _Move.up
           $07cc = _Move.upleft
           $07d2 = _Move.left
           $07d5 = _Move.downleft
           $07db = _Move.down
           $07de = _Move.downright
           $07e4 = ObjUpdate_Player
           $07ed = Player_Draw
           $0813 = ScrollDown
           $0829 = ScrollDown.collision
           $0834 = ScrollUp
           $084a = ScrollUp._no_tiles
           $085e = ScrollRight
           $0874 = ScrollRight.collision
           $087f = ScrollLeft
           $0895 = ScrollLeft._no_tiles
  SECTION: $08a9-$0a40 ($0198 bytes) ["Misc"]
           $08a9 = memcpy.mc
           $08a9 = memcpy
           $08b3 = PopSlideCopy
           $08ba = PopSlideCopy.loop
           $08dc = waitVBlank
           $08dc = waitVBlank.wait
           $08e5 = RunSubroutine
           $08e6 = CopyScreen
           $08f0 = CopyScreen.ver_loopc
           $08f2 = CopyScreen.hor_loopc
           $0915 = CopyScreen.ver_loop
           $0917 = CopyScreen.hor_loop
           $092a = CopyText
           $0935 = CopyText.line
           $0940 = CopyTextBox
           $0945 = CopyTextBox.loop
           $0962 = CopyTextBox.loop2
           $096e = SetCollectableFlag
           $0980 = SetCollectableFlag.loop
           $0987 = GetCollectableFlag
           $099a = GetCollectableFlag.loop
           $09a1 = _clear8
           $09a6 = InitVariables
           $09d8 = LoadPalettes
           $09e0 = LoadPalettes.paletteLoopBG
           $09ee = LoadPalettes.paletteLoopOBJ
           $09f5 = ClearRAM
           $09f9 = ClearRAM.fillWRAMwithZeros
           $0a02 = ClearRAM.fillHRAMwithZeros
           $0a08 = ClearTilemap
           $0a0c = ClearTilemap.loop
           $0a12 = LoadFont
           $0a1c = LoadFont.copyFontLoop
           $0a30 = MapHandler_GetMapDataPointer
  SECTION: $0a41-$0ba8 ($0168 bytes) ["Screens"]
           $0a41 = screen_title
  SECTION: $0ba9-$0d02 ($015a bytes) ["Map Handler"]
           $0ba9 = MapHandler_GetPointers
           $0bcf = HandleGBCpalettes
           $0bff = HandleGBCpalettes.nopalettes
           $0c01 = HandleObjectTile
           $0c19 = HandleObjectTile.end
           $0c1d = m_MapHandler_LoadStripX
           $0c24 = m_MapHandler_LoadStripX.copyLoop
           $0c36 = m_MapHandler_LoadStripX.noObject
           $0c53 = m_MapHandler_LoadStripX.no_carry_u1
           $0c61 = m_MapHandler_LoadStripY
           $0c68 = m_MapHandler_LoadStripY.copyLoop
           $0c7a = m_MapHandler_LoadStripY.noObject
           $0cac = SetScroll
           $0ccf = HandleOneTileStrip
           $0ce3 = HandleOneTileStrip.loadRight
           $0ceb = HandleOneTileStrip.loadUp
           $0cf3 = HandleOneTileStrip.loadLeft
           $0cfb = HandleOneTileStrip.loadDown
  SECTION: $0d03-$0df6 ($00f4 bytes) ["Object Manager"]
           $0d03 = Object_SpawnObject
           $0d06 = Object_SpawnObject.findSlotloop
           $0d0f = Object_SpawnObject.yesDoThisOne
           $0d25 = Object_Update
           $0d28 = Object_Update.objectUpdateLoop
           $0d3b = Object_Update.continue
           $0d41 = Object_CheckOnScreen
           $0d63 = Object_CheckOnScreen.otherwise
           $0d82 = Object_CheckOnScreen.onScreen
           $0d89 = Object_CheckOnScreen.offScreen
           $0d90 = Object_DestroyCurrent
           $0d98 = Object_CleanTypeArray
           $0d9b = Object_CleanTypeArray.loop
           $0da4 = Object_CleanTypeArray.writeZero
           $0da6 = Object_CleanTypeArray.notWriteZero
           $0dab = Object_PlyColl_None
           $0dab = Object_Update_None
           $0dab = Object_Start_None
           $0dab = Object_Draw_None
           $0dad = PrepareSpriteDraw
  SECTION: $0df7-$0ee9 ($00f3 bytes) ["Bullet"]
           $0df7 = Object_Start_Bullet
           $0e3c = Object_Start_Bullet.right
           $0e43 = Object_Start_Bullet.upright
           $0e4b = Object_Start_Bullet.up
           $0e52 = Object_Start_Bullet.upleft
           $0e5a = Object_Start_Bullet.left
           $0e61 = Object_Start_Bullet.downleft
           $0e69 = Object_Start_Bullet.down
           $0e70 = Object_Start_Bullet.downright
           $0e78 = Object_Start_Bullet.afterSettingVelocity
           $0e79 = Object_Update_Bullet
           $0e91 = Object_Update_Bullet.HandleVelX
           $0e96 = Object_Update_Bullet._negative_x
           $0e9d = Object_Update_Bullet._positive_x
           $0ea2 = Object_Update_Bullet._end_x
           $0ea4 = Object_Update_Bullet.HandleVelY
           $0ea9 = Object_Update_Bullet._negative_y
           $0eb0 = Object_Update_Bullet._positive_y
           $0eb5 = Object_Update_Bullet._end_y
           $0ec0 = Object_Update_Bullet.destroyBullet
           $0ecf = Object_Update_Bullet.endOfSubroutine
           $0ed0 = Object_DrawSingle
           $0edd = Object_Draw_Bullet
  SECTION: $0eea-$0f72 ($0089 bytes) ["LYC handler"]
           $0eea = LYChandler
           $0f04 = LYChandler.line8disableWindow
           $0f08 = LYChandler.waitForMode_u2
           $0f29 = LYChandler.endIf
           $0f30 = LYChandler.line144enableWindow
           $0f34 = LYChandler.waitForMode_u3
           $0f53 = LYChandler.lineXshowMessageBox
           $0f57 = LYChandler.waitForMode_u4
  SECTION: $0f73-$0ff3 ($0081 bytes) ["Message Box"]
           $0f73 = StateStart_MessageBox
           $0f81 = StateStart_MessageBox.else_
           $0f8a = StateStart_MessageBox.endIf
           $0f8f = StateUpdate_MessageBox
           $0fa1 = StateUpdate_MessageBox.OpeningBox
           $0fad = StateUpdate_MessageBox.afterIf
           $0fb3 = StateUpdate_MessageBox.StartDisplayText
           $0fc8 = StateUpdate_MessageBox.Waiting
           $0fc9 = StateUpdate_MessageBox.WaitForApress
           $0fd5 = StateUpdate_MessageBox.endIf
           $0fd6 = StateUpdate_MessageBox.ClosingBox
           $0fe4 = StateUpdate_MessageBox.loop
  SECTION: $0ff4-$104c ($0059 bytes) ["Title Screen"]
           $0ff4 = StateStart_TitleScreen
           $1038 = StateUpdate_TitleScreen
           $1043 = StateUpdate_TitleScreen.startPressed
  SECTION: $104d-$1096 ($004a bytes) ["Text Handler"]
           $104d = StateStart_DebugWarning
           $105c = StateStart_DebugWarning.whiteTileLoop
           $1084 = StateUpdate_DebugWarning
           $108d = StateUpdate_DebugWarning.goToTitleScreen
  SECTION: $1097-$10dc ($0046 bytes) ["Multiply"]
           $1097 = Mul8x8to16
  SECTION: $10dd-$1120 ($0044 bytes) ["error handler"]
           $10dd = ErrorHandler
  SECTION: $1121-$1163 ($0043 bytes) ["Controls"]
           $1121 = GetJoypadStatus
           $1163 = GetJoypadStatus.knownRet
  SECTION: $1164-$1184 ($0021 bytes) ["Yellow Gem"]
           $1164 = Object_Start_YellowGem
           $1167 = Object_Update_YellowGem
           $116a = Object_Draw_YellowGem
           $1180 = Object_PlyColl_YellowGem
  SECTION: $1185-$1199 ($0015 bytes) ["OAM DMA routine"]
           $1185 = CopyDMARoutine
           $118b = CopyDMARoutine.copy
           $1192 = DMARoutine
           $1196 = DMARoutine.wait
           $119a = DMARoutineEnd
    SLACK: $2eac bytes

ROMX bank #1:
  SECTION: $4000-$48db ($08dc bytes) ["map_tutorial"]
           $4000 = map_tutorial
  SECTION: $4900-$56ff ($0e00 bytes) ["tileset_crawdad"]
           $4900 = tileset_crawdad_tiles
           $5700 = tileset_crawdad_tiles_end
  SECTION: $5700-$5caf ($05b0 bytes) ["tileset_title_tiles"]
           $5700 = tileset_title_tiles
           $5cb0 = tileset_title_tiles_end
  SECTION: $5d00-$60ff ($0400 bytes) ["font"]
           $5d00 = font_tiles
           $6100 = font_tiles_end
  SECTION: $6100-$625f ($0160 bytes) ["sprites_crawdad_DMG"]
           $6100 = sprites_crawdad_DMG_tiles
           $6260 = sprites_crawdad_DMG_tiles_end
  SECTION: $6280-$62ff ($0080 bytes) ["tileset_crawdad_palette"]
           $6280 = tileset_crawdad_palette
           $6300 = tileset_crawdad_palette_end
  SECTION: $6300-$645f ($0160 bytes) ["tileset_gui"]
           $6300 = tileset_gui_tiles
           $6460 = tileset_gui_tiles_end
  SECTION: $6480-$64bf ($0040 bytes) ["sprites_crawdad_DMG_palette"]
           $6480 = sprites_crawdad_DMG_palette
           $64c0 = sprites_crawdad_DMG_palette_end
  SECTION: $6500-$663f ($0140 bytes) ["sprites_crawdad_CGB"]
           $6500 = sprites_crawdad_CGB_tiles
           $6640 = sprites_crawdad_CGB_tiles_end
  SECTION: $6680-$66b7 ($0038 bytes) ["sprites_crawdad_CGB_palette"]
           $6680 = sprites_crawdad_CGB_palette
           $66b8 = sprites_crawdad_CGB_palette_end
  SECTION: $6700-$683f ($0140 bytes) ["sprites_crawdad"]
           $6700 = sprites_crawdad_tiles
           $6840 = sprites_crawdad_tiles_end
  SECTION: $6880-$68b7 ($0038 bytes) ["sprites_crawdad_palette"]
           $6880 = sprites_crawdad_palette
           $68b8 = sprites_crawdad_palette_end
  SECTION: $6900-$69ff ($0100 bytes) ["tileset_title_palassign"]
           $6900 = tileset_title_palassign
           $6a00 = tileset_title__palassign_end
  SECTION: $6a00-$6aff ($0100 bytes) ["tileset_crawdad_palassign"]
           $6a00 = tileset_crawdad_palassign
           $6b00 = tileset_crawdad__palassign_end
  SECTION: $6b00-$6b8f ($0090 bytes) ["tileset_title_meta"]
           $6b00 = tileset_title_meta
           $6b90 = tileset_title_meta_end
  SECTION: $7e00-$7e00 ($0001 byte) ["map_tutorial metadata"]
           $7e00 = map_tutorial_meta
  SECTION: $7f00-$7f2f ($0030 bytes) ["map_tutorial objects"]
           $7f00 = map_tutorial_obj
    SLACK: $1643 bytes

WRAM0 bank #0:
  SECTION: $c000-$c1ff ($0200 bytes) ["Object Arrays 2"]
           $c000 = Object_IDs
           $c100 = Object_Types
           $c100 = Object_IDsEnd
           $c200 = Object_TypesEnd
  SECTION: $c200-$c2ff ($0100 bytes) ["Shadow OAM"]
           $c200 = pPlayerSpriteSlot
           $c200 = wShadowOAM
           $c208 = sprites_bullets
           $c220 = sprites_objects
           $c2a0 = wShadowOAMend
  SECTION: $c300-$c323 ($0024 bytes) ["Buffers"]
           $c300 = TextBuffer
           $c324 = TextBufferEnd
  SECTION: $c324-$c338 ($0015 bytes) ["Main variables"]
           $c324 = wPlayerPos
           $c324 = wPlayerPos.x_subpixel
           $c324 = wPlayerPos.x
           $c324 = wPlayerPos.x_low
           $c324 = WRAMvariables
           $c325 = wPlayerPos.x_high
           $c325 = wPlayerPos.x_metatile
           $c326 = wPlayerPos.y_subpixel
           $c326 = wPlayerPos.y
           $c326 = wPlayerPos.y_low
           $c327 = wPlayerPos.y_metatile
           $c327 = wPlayerPos.y_high
           $c328 = wScrollX
           $c32a = wScrollY
           $c32c = wCurrMoveSpeed
           $c32d = wPlayerDirection
           $c32e = wBooleans
           $c32f = wCollisionResult1
           $c330 = wCollisionResult2
           $c331 = wCurrCheckOnScreenObj
           $c332 = wShootTimer
           $c333 = wPlayerHealth
           $c334 = wCurrGemDec1
           $c335 = wCurrGemDec2
           $c336 = wMsgBoxAnimTimer
           $c337 = wMsgBoxAnimState
           $c338 = wHandlingUpdateMethod
           $c339 = WRAMvariablesEnd
  SECTION: $c340-$c35f ($0020 bytes) ["Object Arrays 3"]
           $c340 = Object_Flags
           $c360 = Object_FlagsEnd
  SECTION: $c400-$c401 ($0002 bytes) ["Debug variables"]
           $c400 = iErrorCode
    SLACK: $0ca5 bytes

WRAMX bank #1:
  SECTION: $d000-$dfff ($1000 bytes) ["Object Arrays 1"]
           $d000 = Object_Table
           $d000 = Obj.state
           $d000 = Obj
           $d001 = Obj.x
           $d001 = Obj.x_low
           $d001 = Obj.x_subpixel
           $d002 = Obj.x_metatile
           $d002 = Obj.x_high
           $d003 = Obj.y_low
           $d003 = Obj.y
           $d003 = Obj.y_subpixel
           $d004 = Obj.y_metatile
           $d004 = Obj.y_high
           $d005 = Obj.direction
           $d006 = Obj.velocity_x
           $d007 = Obj.velocity_y
    SLACK: $0000 bytes

HRAM bank #0:
  SECTION: $ff80-$ff94 ($0015 bytes) ["HRAM variables"]
           $ff80 = hCurrentState
           $ff81 = hMapLoaded
           $ff82 = hMapWidth
           $ff83 = hJoypadCurrent
           $ff84 = hJoypadLast
           $ff85 = hJoypadPressed
           $ff86 = hJoypadReleased
           $ff87 = hGameboyType
           $ff88 = hRegStorage1
           $ff89 = hRegStorage2
           $ff8a = hRegStorage3
           $ff8b = hMapLoaderMode
           $ff8c = hMapLoaderLoopCounter
           $ff8d = hMapLoaderLoopDEHL
           $ff91 = bDebugValue
           $ff93 = hSPstorage
  SECTION: $ff95-$ff9c ($0008 bytes) ["OAM DMA"]
           $ff95 = hOAMDMA
    SLACK: $0062 bytes

USED:
    ROM0: $1154 bytes in 1 bank
    ROMX: $29bd bytes in 1 bank
    WRAM0: $035b bytes in 1 bank
    WRAMX: $1000 bytes in 1 bank
    HRAM: $001d bytes in 1 bank
