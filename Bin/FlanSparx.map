ROM0 bank #0:
  SECTION: $0000-$0006 ($0007 bytes) ["WaitHBlank"]
           $0000 = waitHBlank.wait
           $0000 = waitHBlank
  SECTION: $0008-$000f ($0008 bytes) ["WaitHBlank but reg B is free"]
           $0008 = waitHBlank_b_is_free
           $000a = waitHBlank_b_is_free.wait
  SECTION: $0010-$0030 ($0021 bytes) ["Blue Gem"]
           $0010 = Object_Start_BlueGem
           $0013 = Object_Update_BlueGem
           $0016 = Object_Draw_BlueGem
           $002c = Object_PlyColl_BlueGem
  SECTION: $0038-$003a ($0003 bytes) ["Erorr handler"]
           $0038 = Error2
  SECTION: $0040-$0045 ($0006 bytes) ["Vblank Vector"]
           $0040 = Vblank
  SECTION: $0048-$004a ($0003 bytes) ["LYC Interrupt"]
  SECTION: $004b-$005f ($0015 bytes) ["OAM DMA routine"]
           $004b = CopyDMARoutine
           $0051 = CopyDMARoutine.copy
           $0058 = DMARoutine
           $005c = DMARoutine.wait
           $0060 = DMARoutineEnd
  SECTION: $0060-$00b5 ($0056 bytes) ["Sprite orders"]
           $0060 = SprCrawdad_0
           $0064 = SprCrawdad_45
           $0068 = SprCrawdad_90
           $006c = SprCrawdad_135
           $0070 = SprCrawdad_180
           $0074 = SprCrawdad_225
           $0078 = SprCrawdad_270
           $007c = SprCrawdad_315
           $0080 = SprPlayer_0
           $0084 = SprPlayer_45
           $0088 = SprPlayer_90
           $008c = SprPlayer_135
           $0090 = SprPlayer_180
           $0094 = SprPlayer_225
           $0098 = SprPlayer_270
           $009c = SprPlayer_315
           $00a0 = SprBlueGem
           $00a4 = SprBullet
           $00a6 = SprGreenGem
           $00aa = SprPurpleGem
           $00ae = SprRedGem
           $00b2 = SprYellowGem
  SECTION: $00c0-$00ff ($0040 bytes) ["Tileset Solidness"]
           $00c0 = tileset_solidness
  SECTION: $0100-$014f ($0050 bytes) ["Jumpstart Code"]
           $0100 = Jumpstart
  SECTION: $0150-$01d9 ($008a bytes) ["Common Gem Code"]
           $0150 = Object_Start_GemCommon
           $0170 = Object_Start_GemCommon.loop
           $0175 = Object_Update_GemCommon
           $018a = Object_Update_GemCommon.unloadGem
           $0199 = Obj_PlyColl_GemCommon
           $01d9 = Obj_PlyColl_GemCommon.noCollision
  SECTION: $01da-$01fa ($0021 bytes) ["Green Gem"]
           $01da = Object_Start_GreenGem
           $01dd = Object_Update_GreenGem
           $01e0 = Object_Draw_GreenGem
           $01f6 = Object_PlyColl_GreenGem
  SECTION: $0200-$02ff ($0100 bytes) ["LUTs"]
           $0200 = Mul4LUT
  SECTION: $0300-$030f ($0010 bytes) ["Start Routine Pointers"]
           $0300 = Object_StartRoutinePointers
  SECTION: $0310-$03f5 ($00e6 bytes) ["Title Screen Loop"]
           $0310 = StateStart_GameLoop
           $0334 = StateStart_GameLoop.noGBC
           $0368 = StateStart_GameLoop.noGBC2
           $0379 = StateStart_GameLoop._after_sprites
           $0390 = StateStart_GameLoop.clear_loop
           $03c6 = StateStart_GameLoop.loop
           $03db = StateUpdate_GameLoop
           $03ec = StateUpdate_GameLoop.checkLoop
  SECTION: $0400-$040f ($0010 bytes) ["Update Routine Pointers"]
           $0400 = Object_UpdateRoutinePointers
  SECTION: $0410-$04e6 ($00d7 bytes) ["User Interface"]
           $0410 = UpdateHUD
           $0436 = UpdateHUD.tile1
           $0440 = UpdateHUD.notEmpty1
           $044b = UpdateHUD.notHalf1
           $044e = UpdateHUD.tile2
           $0458 = UpdateHUD.notEmpty2
           $0462 = UpdateHUD.notHalf2
           $0465 = UpdateHUD.tile3
           $046c = UpdateHUD.notEmpty3
           $0473 = UpdateHUD.notHalf3
           $0477 = ClearWindowLayer
           $047c = ClearWindowLayer.loop1
           $048f = ClearWindowLayer.loop2
           $0498 = InitWindowLayer
           $04a1 = InitWindowLayer.loopHor1
           $04b1 = InitWindowLayer.loopTextRow1
           $04c6 = InitWindowLayer.loopTextRow2
           $04d6 = InitWindowLayer.loopHor2
  SECTION: $0500-$050f ($0010 bytes) ["Player Collision Routine Pointers"]
           $0500 = Object_PlyCollRoutinePointers
  SECTION: $0510-$05c8 ($00b9 bytes) ["Collision Detection"]
           $0510 = GetPlayerCollision
           $0531 = GetPlayerCollision.right
           $0532 = GetPlayerCollision.left
           $054d = GetPlayerCollision.down
           $054e = GetPlayerCollision.up
           $0569 = IsSolid
           $0575 = IsSolid.enemyspot
           $0577 = GetCollisionAtBC
           $057e = PlayerCollObject
           $0581 = PlayerCollObject.loop
           $0597 = GetObjPlyColl
           $05af = GetObjPlyColl.collisionX
           $05c7 = GetObjPlyColl.collisionY
  SECTION: $05c9-$05fd ($0035 bytes) ["Init"]
           $05c9 = Start
           $05e8 = Start.halt
  SECTION: $0600-$060f ($0010 bytes) ["Draw Routine Pointers"]
           $0600 = Object_DrawRoutinePointers
  SECTION: $0610-$06c6 ($00b7 bytes) ["Text Data"]
           $0610 = Text_Title_PressStart
           $061d = Text_Debug_Warning
           $06a2 = Text_Debug_Error
  SECTION: $06c7-$06fa ($0034 bytes) ["Sprite Handler"]
           $06c7 = HandleSprites
           $06d5 = FillShadowOAM
           $06dd = FillShadowOAM.fillLoop
           $06f5 = FillShadowOAM.endLoop
           $06f6 = FillShadowOAM.zeroTheRestLoop
  SECTION: $0700-$070a ($000b bytes) ["StateUpdate"]
           $0700 = States
           $070a = StateUpdate_None
           $070a = StateStart_None
  SECTION: $070b-$08aa ($01a0 bytes) ["Player Handler"]
           $070b = Player_HandleInput
           $0715 = Player_HandleInput.endIf
           $072d = Player_HandleInput.countTimer
           $0731 = Player_HandleInput.afterBullet
           $0748 = Player_HandleInput.handleRight
           $0751 = Player_HandleInput.noInc1
           $0759 = Player_HandleInput.noDec1
           $075b = Player_HandleInput.handleLeft
           $0764 = Player_HandleInput.noInc2
           $076b = Player_HandleInput.noDec2
           $076d = Player_HandleInput.handleUp
           $0771 = Player_HandleInput.handleDown
           $0775 = Player_HandleInput.afterPlayerInput
           $077c = Player_HandleInput.handleMovement
           $0789 = Charge
           $0795 = Charge._no_diagonal
           $0797 = MoveNormal
           $07a3 = _Move
           $07a3 = MoveNormal._no_diagonal
           $07c2 = _Move.right
           $07c5 = _Move.upright
           $07cb = _Move.up
           $07ce = _Move.upleft
           $07d4 = _Move.left
           $07d7 = _Move.downleft
           $07dd = _Move.down
           $07e0 = _Move.downright
           $07e6 = ObjUpdate_Player
           $07ef = Player_Draw
           $0815 = ScrollDown
           $082b = ScrollDown.collision
           $0836 = ScrollUp
           $084c = ScrollUp._no_tiles
           $0860 = ScrollRight
           $0876 = ScrollRight.collision
           $0881 = ScrollLeft
           $0897 = ScrollLeft._no_tiles
  SECTION: $08ab-$0a2d ($0183 bytes) ["Misc"]
           $08ab = memcpy.mc
           $08ab = memcpy
           $08b5 = PopSlideCopy
           $08bc = PopSlideCopy.loop
           $08de = waitVBlank
           $08de = waitVBlank.wait
           $08e7 = RunSubroutine
           $08e8 = CopyScreen
           $08f2 = CopyScreen.ver_loopc
           $08f4 = CopyScreen.hor_loopc
           $0917 = CopyScreen.ver_loop
           $0919 = CopyScreen.hor_loop
           $092c = CopyText
           $0937 = CopyText.line
           $0942 = CopyTextBox
           $0947 = CopyTextBox.loop
           $0964 = CopyTextBox.loop2
           $0970 = SetCollectableFlag
           $0982 = SetCollectableFlag.loop
           $0989 = GetCollectableFlag
           $099c = GetCollectableFlag.loop
           $09a3 = _clear8
           $09a8 = InitVariables
           $09e2 = ClearRAM
           $09e6 = ClearRAM.fillWRAMwithZeros
           $09ef = ClearRAM.fillHRAMwithZeros
           $09f5 = ClearTilemap
           $09f9 = ClearTilemap.loop
           $09ff = LoadFont
           $0a09 = LoadFont.copyFontLoop
           $0a1d = MapHandler_GetMapDataPointer
  SECTION: $0a2e-$0ba4 ($0177 bytes) ["Map Handler"]
           $0a2e = MapHandler_GetPointers
           $0a54 = HandleGBCpalettes
           $0a6c = HandleGBCpalettes.waitForMode_u1
           $0a89 = HandleGBCpalettes.nopalettes
           $0a8b = HandleObjectTile
           $0aa3 = HandleObjectTile.end
           $0aa7 = m_MapHandler_LoadStripX
           $0aae = m_MapHandler_LoadStripX.copyLoop
           $0ac1 = m_MapHandler_LoadStripX.noObject
           $0ac7 = m_MapHandler_LoadStripX.waitForMode_u2
           $0ad7 = m_MapHandler_LoadStripX.waitForMode_u3
           $0ae8 = m_MapHandler_LoadStripX.no_carry_u4
           $0af7 = m_MapHandler_LoadStripY
           $0afe = m_MapHandler_LoadStripY.copyLoop
           $0b11 = m_MapHandler_LoadStripY.noObject
           $0b17 = m_MapHandler_LoadStripY.waitForMode_u5
           $0b27 = m_MapHandler_LoadStripY.waitForMode_u6
           $0b4e = SetScroll
           $0b71 = HandleOneTileStrip
           $0b85 = HandleOneTileStrip.loadRight
           $0b8d = HandleOneTileStrip.loadUp
           $0b95 = HandleOneTileStrip.loadLeft
           $0b9d = HandleOneTileStrip.loadDown
  SECTION: $0ba5-$0d0c ($0168 bytes) ["Screens"]
           $0ba5 = screen_title
  SECTION: $0d0d-$0e00 ($00f4 bytes) ["Object Manager"]
           $0d0d = Object_SpawnObject
           $0d10 = Object_SpawnObject.findSlotloop
           $0d19 = Object_SpawnObject.yesDoThisOne
           $0d2f = Object_Update
           $0d32 = Object_Update.objectUpdateLoop
           $0d45 = Object_Update.continue
           $0d4b = Object_CheckOnScreen
           $0d6d = Object_CheckOnScreen.otherwise
           $0d8c = Object_CheckOnScreen.onScreen
           $0d93 = Object_CheckOnScreen.offScreen
           $0d9a = Object_DestroyCurrent
           $0da2 = Object_CleanTypeArray
           $0da5 = Object_CleanTypeArray.loop
           $0dae = Object_CleanTypeArray.writeZero
           $0db0 = Object_CleanTypeArray.notWriteZero
           $0db5 = Object_PlyColl_None
           $0db5 = Object_Update_None
           $0db5 = Object_Start_None
           $0db5 = Object_Draw_None
           $0db7 = PrepareSpriteDraw
  SECTION: $0e01-$0ef3 ($00f3 bytes) ["Bullet"]
           $0e01 = Object_Start_Bullet
           $0e46 = Object_Start_Bullet.right
           $0e4d = Object_Start_Bullet.upright
           $0e55 = Object_Start_Bullet.up
           $0e5c = Object_Start_Bullet.upleft
           $0e64 = Object_Start_Bullet.left
           $0e6b = Object_Start_Bullet.downleft
           $0e73 = Object_Start_Bullet.down
           $0e7a = Object_Start_Bullet.downright
           $0e82 = Object_Start_Bullet.afterSettingVelocity
           $0e83 = Object_Update_Bullet
           $0e9b = Object_Update_Bullet.HandleVelX
           $0ea0 = Object_Update_Bullet._negative_x
           $0ea7 = Object_Update_Bullet._positive_x
           $0eac = Object_Update_Bullet._end_x
           $0eae = Object_Update_Bullet.HandleVelY
           $0eb3 = Object_Update_Bullet._negative_y
           $0eba = Object_Update_Bullet._positive_y
           $0ebf = Object_Update_Bullet._end_y
           $0eca = Object_Update_Bullet.destroyBullet
           $0ed9 = Object_Update_Bullet.endOfSubroutine
           $0eda = Object_DrawSingle
           $0ee7 = Object_Draw_Bullet
  SECTION: $0ef4-$0f74 ($0081 bytes) ["LYC handler"]
           $0ef4 = LYChandler
           $0f0e = LYChandler.line8disableWindow
           $0f0e = LYChandler.waitForMode_u2
           $0f30 = LYChandler.endIf
           $0f37 = LYChandler.line144enableWindow
           $0f37 = LYChandler.waitForMode_u3
           $0f57 = LYChandler.lineXshowMessageBox
           $0f5a = LYChandler.waitForMode_u4
  SECTION: $0f75-$0ff5 ($0081 bytes) ["Message Box"]
           $0f75 = StateStart_MessageBox
           $0f83 = StateStart_MessageBox.else_
           $0f8c = StateStart_MessageBox.endIf
           $0f91 = StateUpdate_MessageBox
           $0fa3 = StateUpdate_MessageBox.OpeningBox
           $0faf = StateUpdate_MessageBox.afterIf
           $0fb5 = StateUpdate_MessageBox.StartDisplayText
           $0fca = StateUpdate_MessageBox.Waiting
           $0fcb = StateUpdate_MessageBox.WaitForApress
           $0fd7 = StateUpdate_MessageBox.endIf
           $0fd8 = StateUpdate_MessageBox.ClosingBox
           $0fe6 = StateUpdate_MessageBox.loop
  SECTION: $0ff6-$1068 ($0073 bytes) ["Title Screen"]
           $0ff6 = StateStart_TitleScreen
           $1038 = StateStart_TitleScreen.loop_u3
           $1048 = StateStart_TitleScreen.loop_u4
           $1054 = StateUpdate_TitleScreen
           $105f = StateUpdate_TitleScreen.startPressed
  SECTION: $1069-$10c1 ($0059 bytes) ["Text Handler"]
           $1069 = StateStart_DebugWarning
           $1078 = StateStart_DebugWarning.whiteTileLoop
           $109b = StateStart_DebugWarning.loop_u1
           $10af = StateUpdate_DebugWarning
           $10b8 = StateUpdate_DebugWarning.goToTitleScreen
  SECTION: $10c2-$1107 ($0046 bytes) ["Multiply"]
           $10c2 = Mul8x8to16
  SECTION: $1108-$114b ($0044 bytes) ["error handler"]
           $1108 = ErrorHandler
  SECTION: $114c-$118e ($0043 bytes) ["Controls"]
           $114c = GetJoypadStatus
           $118e = GetJoypadStatus.knownRet
  SECTION: $118f-$11cc ($003e bytes) ["SwarmerStill"]
           $118f = Object_Start_SwarmerStill
           $1192 = Object_Update_SwarmerStill
           $1195 = Object_Draw_SwarmerStill
           $1196 = Object_PlyColl_SwarmerStill
           $11cc = Object_PlyColl_SwarmerStill.noCollision
  SECTION: $11cd-$11ed ($0021 bytes) ["Red Gem"]
           $11cd = Object_Start_RedGem
           $11d0 = Object_Update_RedGem
           $11d3 = Object_Draw_RedGem
           $11e9 = Object_PlyColl_RedGem
  SECTION: $11ee-$120e ($0021 bytes) ["Purple Gem"]
           $11ee = Object_Start_PurpleGem
           $11f1 = Object_Update_PurpleGem
           $11f4 = Object_Draw_PurpleGem
           $120a = Object_PlyColl_PurpleGem
  SECTION: $120f-$122f ($0021 bytes) ["Yellow Gem"]
           $120f = Object_Start_YellowGem
           $1212 = Object_Update_YellowGem
           $1215 = Object_Draw_YellowGem
           $122b = Object_PlyColl_YellowGem
    SLACK: $2e18 bytes

ROMX bank #1:
  SECTION: $4000-$48db ($08dc bytes) ["map_tutorial"]
           $4000 = map_tutorial
  SECTION: $4900-$56ff ($0e00 bytes) ["tileset_crawdad"]
           $4900 = tileset_crawdad_tiles
           $5700 = tileset_crawdad_tiles_end
  SECTION: $5700-$5caf ($05b0 bytes) ["tileset_title_tiles"]
           $5700 = tileset_title_tiles
           $5cb0 = tileset_title_tiles_end
  SECTION: $5d00-$60ff ($0400 bytes) ["font"]
           $5d00 = font_tiles
           $6100 = font_tiles_end
  SECTION: $6100-$629f ($01a0 bytes) ["sprites_crawdad_CGB"]
           $6100 = sprites_crawdad_CGB_tiles
           $62a0 = sprites_crawdad_CGB_tiles_end
  SECTION: $6300-$649f ($01a0 bytes) ["sprites_crawdad_DMG"]
           $6300 = sprites_crawdad_DMG_tiles
           $64a0 = sprites_crawdad_DMG_tiles_end
  SECTION: $6500-$665f ($0160 bytes) ["tileset_gui"]
           $6500 = tileset_gui_tiles
           $6660 = tileset_gui_tiles_end
  SECTION: $6680-$66ff ($0080 bytes) ["tileset_crawdad_palette"]
           $6680 = tileset_crawdad_palette
           $6700 = tileset_crawdad_palette_end
  SECTION: $6700-$683f ($0140 bytes) ["sprites_crawdad"]
           $6700 = sprites_crawdad_tiles
           $6840 = sprites_crawdad_tiles_end
  SECTION: $6880-$68bf ($0040 bytes) ["sprites_crawdad_CGB_palette"]
           $6880 = sprites_crawdad_CGB_palette
           $68c0 = sprites_crawdad_CGB_palette_end
  SECTION: $6900-$69ff ($0100 bytes) ["tileset_title_palassign"]
           $6900 = tileset_title_palassign
           $6a00 = tileset_title__palassign_end
  SECTION: $6a00-$6aff ($0100 bytes) ["tileset_crawdad_palassign"]
           $6a00 = tileset_crawdad_palassign
           $6b00 = tileset_crawdad__palassign_end
  SECTION: $6b00-$6b8f ($0090 bytes) ["tileset_title_meta"]
           $6b00 = tileset_title_meta
           $6b90 = tileset_title_meta_end
  SECTION: $6c00-$6c37 ($0038 bytes) ["sprites_crawdad_DMG_palette"]
           $6c00 = sprites_crawdad_DMG_palette
           $6c38 = sprites_crawdad_DMG_palette_end
  SECTION: $6c80-$6cb7 ($0038 bytes) ["sprites_crawdad_palette"]
           $6c80 = sprites_crawdad_palette
           $6cb8 = sprites_crawdad_palette_end
  SECTION: $7e00-$7e00 ($0001 byte) ["map_tutorial metadata"]
           $7e00 = map_tutorial_meta
  SECTION: $7f00-$7f2f ($0030 bytes) ["map_tutorial objects"]
           $7f00 = map_tutorial_obj
    SLACK: $15a3 bytes

WRAM0 bank #0:
  SECTION: $c000-$c1ff ($0200 bytes) ["Object Arrays 2"]
           $c000 = Object_IDs
           $c100 = Object_Types
           $c100 = Object_IDs.end
           $c200 = Object_Types.end
  SECTION: $c200-$c2ff ($0100 bytes) ["Shadow OAM"]
           $c200 = wShadowOAM
           $c2a0 = wShadowOAM.end
  SECTION: $c300-$c323 ($0024 bytes) ["Buffers"]
           $c300 = wTextBuffer
           $c324 = wTextBuffer.end
  SECTION: $c324-$c334 ($0011 bytes) ["Main variables"]
           $c324 = wPlayerPos
           $c324 = wPlayerPos.x_subpixel
           $c324 = wPlayerPos.x
           $c324 = wPlayerPos.x_low
           $c324 = WRAMvariables
           $c325 = wPlayerPos.x_high
           $c325 = wPlayerPos.x_metatile
           $c326 = wPlayerPos.y_subpixel
           $c326 = wPlayerPos.y
           $c326 = wPlayerPos.y_low
           $c327 = wPlayerPos.y_metatile
           $c327 = wPlayerPos.y_high
           $c328 = wCurrMoveSpeed
           $c329 = wPlayerDirection
           $c32a = wBooleans
           $c32b = wCollisionResult1
           $c32c = wCollisionResult2
           $c32d = wCurrCheckOnScreenObj
           $c32e = wShootTimer
           $c32f = wPlayerHealth
           $c330 = wCurrGemDec1
           $c331 = wCurrGemDec2
           $c332 = wMsgBoxAnimTimer
           $c333 = wMsgBoxAnimState
           $c334 = wHandlingUpdateMethod
           $c335 = WRAMvariablesEnd
  SECTION: $c340-$c35f ($0020 bytes) ["Object Arrays 3"]
           $c340 = Object_Flags
           $c360 = Object_Flags.end
  SECTION: $c400-$c401 ($0002 bytes) ["Debug variables"]
           $c400 = iErrorCode.low
           $c400 = iErrorCode
           $c401 = iErrorCode.high
    SLACK: $0ca9 bytes

WRAMX bank #1:
  SECTION: $d000-$dfff ($1000 bytes) ["Object Arrays 1"]
           $d000 = Object_Table
           $d000 = Obj.state
           $d000 = Obj
           $d001 = Obj.x
           $d001 = Obj.x_low
           $d001 = Obj.x_subpixel
           $d002 = Obj.x_metatile
           $d002 = Obj.x_high
           $d003 = Obj.y_low
           $d003 = Obj.y
           $d003 = Obj.y_subpixel
           $d004 = Obj.y_metatile
           $d004 = Obj.y_high
           $d005 = Obj.direction
           $d006 = Obj.velocity_x
           $d007 = Obj.velocity_y
    SLACK: $0000 bytes

HRAM bank #0:
  SECTION: $ff80-$ff94 ($0015 bytes) ["HRAM variables"]
           $ff80 = HRAMvariables
           $ff80 = hCurrentState
           $ff81 = hMapLoaded
           $ff82 = hMapWidth
           $ff83 = hJoypadCurrent
           $ff84 = hJoypadLast
           $ff85 = hJoypadPressed
           $ff86 = hJoypadReleased
           $ff87 = hGameboyType
           $ff88 = hRegStorage1
           $ff89 = hRegStorage2
           $ff8a = hRegStorage3
           $ff8b = hMapLoaderMode
           $ff8c = hMapLoaderLoopCounter
           $ff8d = hMapLoaderLoopDEHL
           $ff91 = hSPstorage
           $ff91 = hSPstorage.low
           $ff92 = hSPstorage.high
           $ff93 = hSCX
           $ff94 = hSCY
           $ff95 = HRAMvariablesEnd
  SECTION: $ff95-$ff9c ($0008 bytes) ["OAM DMA"]
           $ff95 = hOAMDMA
    SLACK: $0062 bytes

USED:
    ROM0: $11e8 bytes in 1 bank
    ROMX: $2a5d bytes in 1 bank
    WRAM0: $0357 bytes in 1 bank
    WRAMX: $1000 bytes in 1 bank
    HRAM: $001d bytes in 1 bank
